{"version":3,"sources":["Board/dfsSearch.js","Board/Queue.js","Board/bfsFunctions.js","Board/mainFileFunctions.js","Board/Board.jsx","App.js","serviceWorker.js","index.js"],"names":["search","grid","visited","i","j","animations","word","index","length","charAt","push","right","down","left","up","Queue","this","items","element","isEmpty","shift","searchB","pop","c","l","q2","enqueue","w","Math","floor","z","set2","Set","bool","p","front","add","dequeue","has","temp","makeWord","len","c2","c3","c4","num","random","set","ranLength","newWord","nextNum","arr","x","y","concat","Board","prop","state","dGrid","bGrid","stringV","createGrid","outer","inner","String","fromCharCode","setState","console","log","clearGrid","getDfsAnimations","k","one","two","val","divstyle","document","getElementsByClassName","style","setTimeout","background","color","delete","divD","divB","q","getBfsAnimations","className","onClick","newWordFunc","map","oIdx","key","iIdx","from","opacity","to","props","searchD","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d25942a.chunk.js","sourcesContent":["export function getDfsAnimations(grid, word) {\n  const animations = [];\n  const visited = [];\n\n  for (let i = 0; i < grid.length; i++) {\n    const inner = [];\n    for (let j = 0; j < grid[0].length; j++) {\n      inner.push(false);\n    }\n    visited.push(inner);\n  }\n\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid.length; j++) {\n      if (grid[i][j] === word.charAt(0)) {\n        var result = search(grid, visited, i, j, animations, word, 0);\n        if (result){ return animations; } \n      }else {\n        animations.push([i, j]);\n      }\n    }\n  }\n\n  return animations;\n}\n\nfunction search(grid, visited, i, j, animations, word, index) {\n  if (\n    i < 0 ||\n    j < 0 ||\n    i >= grid.length ||\n    j >= grid.length ||\n    visited[i][j] === true ||\n    word.charAt(index) !== grid[i][j]\n  ) {\n    return false;\n  }\n\n  if (index === word.length - 1) {\n    animations.push([i, j]);\n    return true;\n  }\n\n  visited[i][j] = true;\n  animations.push([i, j]);\n\n  let right = search(grid, visited, i, j + 1, animations, word, index + 1);\n  if (right) return true;\n  let down = search(grid, visited, i + 1, j, animations, word, index + 1);\n  if (down) return true;\n  let left = search(grid, visited, i, j - 1, animations, word, index + 1);\n  if (left) return true;\n  let up = search(grid, visited, i - 1, j, animations, word, index + 1);\n  if (up) return true;\n\n  visited[i][j] = false;\n  //animations.push([i, j]);\n\n  return right || up || left || down;\n}\n\n\n","export default class Queue {\n  constructor() {\n    this.items = [];\n  }\n\n  enqueue(element) {\n    this.items.push(element);\n  }\n\n  dequeue() {\n \n    if (this.isEmpty()) return \"Its empty\";\n    return this.items.shift();\n  }\n\n  front() {\n\n    if (this.isEmpty()) return \"Queue Empty\";\n    return this.items[0];\n  }\n\n  isEmpty() {\n    return this.items.length === 0;\n  }\n}\n","import Queue from \"./Queue\";\n\nexport function getBfsAnimations(grid, word) {\n  const animations = [];\n  var l = grid.length;\n    var q = new Queue();\n    animations.push([0,0]);\n\n    q.enqueue(0);\n    var set = new Set();\n\n    while(!q.isEmpty()){\n        var pop = q.front(); \n        set.add(pop);\n\n        var w = Math.floor((pop)/l);\n        var z = (pop) % l;\n        animations.push([w,z]);\n\n         \n        q.dequeue();\n\n        if((pop+1) % l !== 0 && !(set.has(pop+1))){\n            if(word.charAt(0) === grid[Math.floor((pop+1)/l)][(pop+1)%l]){\n                var x = Math.floor((pop+1)/l);\n                var y = (pop+1) % l;\n                \n                set.add(pop+1);\n                q.enqueue(pop+1);\n                var res = searchB(word, grid, pop+1, animations);\n                if(res){\n                    search(grid, x, y, animations, word, 0)\n                    return animations;\n                }\n            }else{\n                set.add(pop+1);\n                var x = Math.floor((pop+1)/l);\n                var y = (pop+1) % l;\n                q.enqueue(pop+1);\n            }\n        }\n        if((pop-1) % l !== (l-1) && pop-1 > 0 && !(set.has(pop-1))){\n            if(word.charAt(0) === grid[Math.floor((pop-1)/l)][(pop-1)%l]){\n                var x = Math.floor((pop-1)/l);\n                var y = (pop-1) % l;\n                set.add(pop-1);\n                q.enqueue(pop-1);\n                var res = searchB(word, grid, pop-1, animations)\n                if(res){\n                    search(grid, x, y, animations, word, 0)\n                    return animations;\n                }\n            }else{\n                set.add(pop-1);\n                var x = Math.floor((pop-1)/l);\n                var y = (pop-1) % l;\n                q.enqueue(pop-1);\n            }\n        }\n        if(pop-l > 0 && !(set.has(pop-l))){\n            if(word.charAt(0) === grid[Math.floor((pop-l)/l)][(pop-l)%l]){\n                set.add(pop-l);\n                var x = Math.floor((pop-l)/l);\n                var y = (pop-l) % l;\n                q.enqueue(pop-l);\n                var res = searchB(word, grid, pop-l, animations)\n                if(res){\n                    search(grid, x, y, animations, word, 0)\n                    return animations;\n                }\n            }else{\n                set.add(pop-l);\n                var x = Math.floor((pop-l)/l);\n                var y = (pop-l) % l;\n                q.enqueue(pop-l);\n            }\n        }\n        if(pop+l < l*l && !(set.has(pop+l))){\n            if(word.charAt(0) === grid[Math.floor((pop+l)/l)][(pop+l)%l]){\n                set.add(pop+l);\n                var x = Math.floor((pop+l)/l);\n                var y = (pop+l) % l;\n                q.enqueue(pop+l);\n                var res = searchB(word, grid, pop+l, animations)\n                if(res){\n                    search(grid, x, y, animations, word, 0)\n                    return animations;\n                }\n            }else{\n                set.add(pop+l);\n                var x = Math.floor((pop+l)/l);\n                var y = (pop+l) % l;\n                q.enqueue(pop+l);\n            }\n        }\n\n    }\n\n  return animations;\n}\n\nfunction searchB(word, grid, pop, animations){\n\n    let c = 1;\n    var l = grid.length\n    \n    var q2 = new Queue();\n    q2.enqueue(pop);\n    \n    var w = Math.floor((pop)/l);\n    var z = (pop) % l;\n    animations.push([w,z]);\n    var set2 = new Set();\n\n    while (!q2.isEmpty()){\n\n        \n        var bool = false;\n        \n        var p = q2.front();\n        set2.add(p);\n        q2.dequeue();\n        var w = Math.floor((p)/l);\n        var z = (p) % l;\n\n        if((p+1) % l !== 0 && !(set2.has(p+1))){\n            if(word.charAt(c) === grid[Math.floor((p+1)/l)][(p+1)%l]){    \n                q2.enqueue(p+1);\n                bool = true;\n            }\n            \n        }\n\n        if((p-1) % l !== (l-1) && !(set2.has(p-1))){\n            if(word.charAt(c) === grid[Math.floor((p-1)/l)][(p-1)%l]){\n                q2.enqueue(p-1);\n                bool = true;\n            }\n          \n        }\n\n        if(p-l > 0 && !(set2.has(p-l))){\n            if(word.charAt(c) === grid[Math.floor((p-l)/l)][(p-l)%l]){\n                q2.enqueue(p-l);\n                bool = true;\n            }\n          \n        }\n\n        if(p+l < l*l && !(set2.has(p+l))){\n            if(word.charAt(c) === grid[Math.floor((p+l)/l)][(p+l)%l]){\n                q2.enqueue(p+l);\n                bool = true;\n            }\n          \n        }\n\n        if(bool === false){\n            animations.pop();\n            continue;\n        }\n        c = c+1;\n\n        if(c === word.length)return true;\n\n    }\n\n}\n\nfunction search(grid, i, j, animations, word, index) {\n    if (\n      i < 0 ||\n      j < 0 ||\n      i >= grid.length ||\n      j >= grid.length ||\n      grid[i][j] === 0 ||\n      word.charAt(index) !== grid[i][j]\n    ) {\n      return false;\n    }\n  \n    if (index === word.length - 1) {\n      animations.push([i, j]);\n      return true;\n    }\n    \n    let temp = grid[i][j];\n    grid[i][j] = 0;\n    animations.push([i, j]);\n  \n    let right = search(grid, i, j + 1, animations, word, index + 1);\n    if (right) {grid[i][j] = temp;return true;}\n    let down = search(grid, i + 1, j, animations, word, index + 1);\n    if (down) {grid[i][j] = temp;return true;}\n    let left = search(grid, i, j - 1, animations, word, index + 1);\n    if (left) {grid[i][j] = temp;return true;}\n    let up = search(grid, i - 1, j, animations, word, index + 1);\n    if (up) {grid[i][j] = temp;return true;}\n  \n    grid[i][j] = temp;\n  \n    return right || up || left || down;\n  }\n\n","export function randomChar() {\n    return String.fromCharCode(Math.random() * (91 - 65) + 65);\n}\n  \nexport function makeWord(grid){\n    var len = grid.length;\n\n    var c1 = 0;\n    var c2 = len-1;\n    var c3 = len * len -len;\n    var c4 = len*len-1;\n\n\n    var num = Math.floor(Math.random() * (len*len - 0 + 1)) + 0;\n    if(num === 0)num = num+15 ;\n    var set = new Set();\n    var ranLength = Math.floor(Math.random() * (9 - 4 + 1)) + 4; //Random string length bet 5-8\n    var w = Math.floor(num/len);\n    var z = num % len;\n    let newWord = grid[w][z];  \n\n\n    while(newWord.length !== ranLength){\n        \n        set.add(num);\n\n        if(num === c1 || num === c2 || num === c3 || num === c4){ //Corner numbers in grid\n            if(num === c1){\n                var pick = Math.random() < 0.5 ? 1 : len;\n                var nextNum = num + pick;\n                if(set.has(nextNum)) continue;\n                num = nextNum;\n\n            }else if(num === c2){\n                var pick = Math.random() < 0.5 ? -1 : len;\n                var nextNum = num + pick;\n                if(set.has(nextNum)) continue;\n                num = nextNum;\n            }else if(num === c3){\n                var pick = Math.random() < 0.5 ? 1 : -len;\n                var nextNum = num + pick;\n                if(set.has(nextNum)) continue;\n                num = nextNum;\n            }else if(num === c4){\n                var pick = Math.random() < 0.5 ? -1 : -len;\n                var nextNum = num + pick;\n                if(set.has(nextNum)) continue;\n                num = nextNum;\n            }\n        }else if(num % len === 0 || ((num + 1)% len) === 0 || num < len || num > ((len*len) - len)){ //Edge numbers in grid\n\n            if(num % len === 0){\n                var arr = [1,len,-len];\n                var pick = arr[Math.floor(Math.random() * arr.length)];\n                var nextNum = num + pick;\n                if(set.has(nextNum)) continue;\n                num = nextNum;\n            }else if(((num + 1)% len) === 0){\n                var arr = [-1,len,-len];\n                var pick = arr[Math.floor(Math.random() * arr.length)];\n                var nextNum = num + pick;\n                if(set.has(nextNum)) continue;\n                num = nextNum;\n            }else if(num < len){\n                var arr = [-1,1,len];\n                var pick = arr[Math.floor(Math.random() * arr.length)];\n                var nextNum = num + pick;\n                if(set.has(nextNum)) continue;\n                num = nextNum;\n            }else if(num > ((len*len) - len)){\n                var arr = [-1,1,-len];\n                var pick = arr[Math.floor(Math.random() * arr.length)];\n                var nextNum = num + pick;\n                if(set.has(nextNum)) continue;\n                num = nextNum;\n            }\n        }else{ //Middle number. No corners or edges\n            var arr = [-1,1,len,-len];\n            var pick = arr[Math.floor(Math.random() * arr.length)];\n            var nextNum = num + pick;\n            if(set.has(nextNum)) continue;\n            num = nextNum;\n        }\n        var x = Math.floor(num/len);\n        var y = num % len;\n    \n        newWord = newWord.concat(grid[x][y]);        \n        \n    }\n\n    return newWord;\n\n}","import React from 'react';\nimport \"./Board.css\";\nimport {Spring} from \"react-spring/renderprops\";\n\nimport {getDfsAnimations } from \"./dfsSearch\";\nimport {getBfsAnimations } from \"./bfsFunctions\";\nimport {randomChar, makeWord } from \"./mainFileFunctions\";\n\n\n//getBfsAnimations\nexport default class Board extends React.Component{\n\n    constructor(prop){\n        super();\n        this.state = {\n            dGrid: [],\n            bGrid: [],\n            stringV: \"\"\n        }\n    }\n\n    componentDidMount(){\n        this.createGrid();\n    }\n\n    //Function to create grid and add grid values\n    createGrid(){\n\n        const outer = [];\n\n        for(let i = 0; i < 15; i++){\n            const inner = [];\n            for(let j = 0; j < 15; j++){\n\n                inner.push(randomChar());\n            }\n            outer.push(inner);\n        }\n\n        this.setState({dGrid: outer});\n        this.setState({bGrid: outer});\n\n        let word = makeWord(outer);\n        console.log(\"Word: \" + word);\n        this.setState({stringV: word});\n    }\n\n    \n    searchD(){\n        this.clearGrid();\n\n        const set = new Set();\n        const animations = getDfsAnimations(this.state.dGrid, this.state.stringV);\n        \n\n        for(let k = 0; k < animations.length +1; k++){\n\n            if(k === animations.length){\n                \n                for(let i = animations.length-1; i > animations.length-this.state.stringV.length-1; i--){\n                    const one = animations[i][0]; \n                    const two = animations[i][1]; \n                    const val = one*(this.state.dGrid).length+two;\n                    \n                    const div = document.getElementsByClassName(\"colD\");\n                    const divstyle = div[val].style;\n\n                    setTimeout(()=>{\n\n                        divstyle.background = \"lightgreen\";\n                        divstyle.color = \"yellow\";\n                    \n                    }, k*50);\n                }\n\n                break;\n            }\n\n            const one = animations[k][0]; \n            const two = animations[k][1]; \n            const val = one*(this.state.dGrid).length+two;\n            \n            const div = document.getElementsByClassName(\"colD\");\n            const divstyle = div[val].style;\n            const color = \"#7296A4\";\n\n            if(set.has(val)){\n                setTimeout(()=>{\n\n                    divstyle.background = \"#7296A4\";\n\n                \n                }, k*50);\n\n                set.delete(val);\n                \n            }else{\n\n                setTimeout(()=>{\n\n                    divstyle.background = color;\n                    divstyle.color = \"lightblue\";\n                    // divstyle.transform = \"scale(1.5)\";\n\n                \n                }, k*50);\n                set.add(val);\n\n            }\n        \n        }\n        \n    }\n    newWordFunc(){\n        this.clearGrid();\n        let word = makeWord(this.state.dGrid);\n        console.log(\"Word: \" + word);\n        this.setState({stringV: word});\n\n    }\n\n    clearGrid(){\n\n        const divD = document.getElementsByClassName(\"colD\");\n        const divB = document.getElementsByClassName(\"colB\");\n\n       \n\n        for(let i = 0; i < 225; i++){\n            divD[i].style.background = \"white\";\n            divB[i].style.background = \"white\";\n            divD[i].style.color = \"black\";\n            divB[i].style.color = \"black\";\n\n        }\n\n\n    }\n\n    searchB(){\n        this.clearGrid();\n        const set = new Set();\n        const animations = getBfsAnimations(this.state.bGrid, this.state.stringV);\n\n        for(let k = 0; k < animations.length+1; k++){\n\n            if(k === animations.length){\n                \n                for(let i = animations.length-1; i > animations.length-(this.state.stringV.length+1); i--){\n                    const one = animations[i][0]; \n                    const two = animations[i][1]; \n                    const val = one*(this.state.dGrid).length+two;\n                    \n                    const div = document.getElementsByClassName(\"colB\");\n                    const divstyle = div[val].style;\n\n                    setTimeout(()=>{\n\n                        divstyle.background = \"lightgreen\";\n                        divstyle.color = \"yellow\";\n                    \n                    }, k*50);\n                }\n\n                break;\n            }\n\n            const one = animations[k][0]; \n            const two = animations[k][1]; \n            const val = one*(this.state.bGrid.length)+two;\n\n            \n            const div = document.getElementsByClassName(\"colB\");\n            const divstyle = div[val].style;\n            const color = \"#7296A4\";\n\n            if(set.has(val)){\n                setTimeout(()=>{\n\n                    divstyle.background = \"#7296A4\";\n                    //divstyle.color = \"yellow\";\n                \n                }, k*50);\n\n                set.delete(val);\n                \n            }else{\n\n                setTimeout(()=>{\n\n                    divstyle.background = color;\n                    divstyle.color = \"lightblue\";\n                \n                }, k*50);\n                set.add(val);\n\n            }\n        \n        }\n        \n    }\n\n    render(){\n\n        const { dGrid } = this.state;\n        const { bGrid } = this.state;\n        const { stringV } = this.state;\n\n        return(\n            <div className=\"backG\">\n                <div className=\"header_button\">\n                    <h2> {stringV} </h2>\n                    <button className=\"newGrid\" onClick={()=> {this.createGrid()}}>New Grid</button>\n                </div>\n                <br/>\n                <button className =\"changebutton\" onClick={()=> {this.newWordFunc()}}>Press to Change Text</button>\n                <br/>\n                <div className=\"dfs\">\n                    {\n                        dGrid.map((outer,oIdx)=>(\n                        \n                            <div className=\"row\" key={oIdx}>\n                                {\n                                outer.map((inner,iIdx)=>(\n                                    <div className=\"colD\" key={iIdx}>\n                                        {inner} \n                                    </div>\n                                ))}\n                            </div>\n\n                        ))}\n\n                </div>\n                <div className=\"bfs\" >\n                {\n                    bGrid.map((outer,oIdx)=>(\n                    \n                        <div className=\"row\" key={oIdx}>\n                            {\n                            outer.map((inner,iIdx)=>(\n                                <div className=\"colB\" key={iIdx}>\n\n                                <Spring from={{opacity:1}} to={{opacity:1}}>\n                                    {props =>(\n                                        <div style ={props}>\n                                            {inner} \n                                        </div>\n                                    )\n\n                                    }\n                                </Spring>\n                                    \n\n\n                                </div>\n                            ))}\n                        </div>\n\n                    ))}\n\n                </div>\n                <br/>\n                <button onClick={()=> {this.searchD();this.searchB(); }}> Search</button>\n\n            </div>\n\n\n        );\n    }\n\n\n\n} ","import React from 'react';\nimport './App.css';\nimport Board from './Board/Board'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>DFS vs BFS</h1>\n      <Board></Board>\n      <div className = \"bottom\">&nbsp;</div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}